swagger: "2.0"
info:
  version: "1.0.0"
  title: music-server
# during dev, should point to your local machine
host: 95.85.24.243:10010
# basePath prefixes all resource paths 
basePath: /
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /artists:
    # our controller name
    x-swagger-router-controller: artist
    get:
      operationId: list
      description: List artists from the server
      # define the type of response for Success "200" and Error
      parameters:
        - name: page
          type: number
          in: query
          required: false
        - name: output
          type: string
          in: query
          required: false          
        - name: filter
          type: string
          in: query
          required: false          
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/Artist'
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

    post:
      description: Add a new artist to the list
      parameters:
        - name: data
          description: Artist properties
          in: body
          required: true
          schema:
            $ref: "#/definitions/Artist"
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/Artist'
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /artists/{mbid}:
    # our controller name
    x-swagger-router-controller: artist
    
    get:
      description: Get a Artist including all albums
      # define the type of response for Success "200" and Error
      parameters:
        - name: mbid
          type: string
          in: path
          required: true
        - name: output
          type: string
          in: query
          required: false
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Artist"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

    patch:
      description: Update a Artist
      # define the parameters
      parameters:
        - name: mbid
          description: the Artist id
          type: string
          in: path
          required: true
        - name: title
          description: Artist properties
          in: body
          required: true         
          schema:
            $ref: "#/definitions/Artist"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Artist"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

    delete:
      description: Delete a Artist
      # define the parameters
      parameters:
        - name: mbid
          description: Artist id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /swagger:
    x-swagger-pipe: swagger_raw

# complex objects have schema definitions
definitions:

  GeneralResponse:
    type: object
    properties:
      success:
        type: number
        description: returns 1 if successful
      description:
        type: string
        description: a short comment 
    required:
      - success
      - description

  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
        
  Artist:
    type: object
    properties:
      mbid:
        type: string
        description: Musicbrainz id (TOC)
      title:
        type: string
        description: Artist name/title/group
      description:
        type: string
        description: Description retrivied from wiki
  
      albums:
        type: array
        description: All the albums of the Artist
        items: 
          $ref: '#/definitions/Album'
    
  Album:
    type: object
    description: An album
    properties:
      id:
        type: string
        description: The album title.
      image:
        type: string
        description: the cover art of the album.
      thumbnail:
        type: string
        description: thumbnail image of the album.
      title:
        type: string
        description: The album title.
      first-release-date:
        type: string
        description: The album release date. 